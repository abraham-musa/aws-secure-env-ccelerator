<header>
    <div class="tsd-page-toolbar">
        <div class="container">
            <div class="table-wrap">
                <div class="table-cell" id="tsd-search" data-index="{{relativeURL "assets/js/search.json"}}"
                    data-base="{{relativeURL "./"}}">
                    <div class="field">
                        <label for="tsd-search-field" class="tsd-widget search no-caption">Search</label>
                        <input id="tsd-search-field" type="text" />
                    </div>

                    <ul class="results">
                        <li class="state loading">Preparing search index...</li>
                        <li class="state failure">The search index is not available</li>
                    </ul>
                    <ul class="results-priority" style="display:none">
                        {{#each settings.search}}
                        <li data-name="{{name}}" data-subtitle="{{subtitle}}"></li>
                        {{/each}}
                    </ul>

                    {{!-- <a href="{{relativeURL "index.html"}}" class="title">{{project.name}}</a> --}}
                    <a href="{{relativeURL "index.html"}}" class="title">{{#localize}}app-title{{/localize}}</a>
                    {{#each settings.links}}
                    &emsp;<a href="{{url}}" class="title">{{label}}</a>
                    {{/each}}
                </div>

                <div class="table-cell" id="tsd-widgets">
                    <div id="tsd-filter">
                        <a href="#" class="tsd-widget options no-caption" data-toggle="options">Options</a>
                        <div class="tsd-filter-group">
                            <div class="tsd-select" id="tsd-filter-visibility">
                                <span class="tsd-select-label">All</span>
                                <ul class="tsd-select-list">
                                    <li data-value="public">Public</li>
                                    <li data-value="protected">Public/Protected</li>
                                    <li data-value="private" class="selected">All</li>
                                </ul>
                            </div>
                            <div class="tsd-select" id="tsd-language-filter">
                                <span id="selected-language" class="tsd-select-label"
                                    data-language="{{#localize}}language-code{{/localize}}">{{#localize}}Language{{/localize}}</span>
                                <ul class="tsd-select-list" id="tsd-language-select-list">
                                    <li data-value="en">English</li>
                                    <li data-value="fr">Fran√ßais</li>
                                </ul>
                            </div>

                            <input type="checkbox" id="tsd-filter-inherited" checked />
                            <label class="tsd-widget" for="tsd-filter-inherited">Inherited</label>

                            {{#unless settings.excludeExternals}}
                            <input type="checkbox" id="tsd-filter-externals" checked />
                            <label class="tsd-widget" for="tsd-filter-externals">Externals</label>
                            {{/unless}}

                            {{#unless settings.excludeNotExported}}
                            <input type="checkbox" id="tsd-filter-only-exported" />
                            <label class="tsd-widget" for="tsd-filter-only-exported">Only exported</label>
                            {{/unless}}
                        </div>
                    </div>

                    <a href="#" class="tsd-widget menu no-caption" data-toggle="menu">Menu</a>
                </div>
            </div>
        </div>
    </div>
    <div class="tsd-page-title custom-breadcrumb">
        <div class="container">
            <ul class="tsd-breadcrumb">
                {{#with model}}{{> breadcrumb}}{{/with}}
            </ul>
        </div>
    </div>
    <div class="tsd-page-title disclaimer-wrapper">
        <div class="container disclaimer">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                <title>Warning</title>
                <path
                    d="M85.57 446.25h340.86a32 32 0 0028.17-47.17L284.18 82.58c-12.09-22.44-44.27-22.44-56.36 0L57.4 399.08a32 32 0 0028.17 47.17z"
                    fill="none" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" />
                <path d="M250.26 195.39l5.74 122 5.73-121.95a5.74 5.74 0 00-5.79-6h0a5.74 5.74 0 00-5.68 5.95z"
                    fill="none" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" />
                <path fill="black" d="M256 397.25a20 20 0 1120-20 20 20 0 01-20 20z" />
            </svg>
            <h5>
                {{#localize}}Disclaimer{{/localize}}
            </h5>
        </div>
    </div>
</header>
<style>
    .disclaimer-wrapper {
        background: #FFD740;
        padding: 0;
    }

    .custom-breadcrumb {
        margin-bottom: 0px;
    }

    .disclaimer {
        display: flex;
        justify-content: flex-start;
        align-items: center;
    }

    .disclaimer svg {
        width: 40px;
        margin-right: 15px;
    }

    .disclaimer h5 {
        line-height: 20px;
    }
</style>
<script>
    function replaceMainBreadcrumbLink() {
        const mainBreadcrumb = document.querySelector('.main-breadcrumb');
        if (!mainBreadcrumb.href.indexOf("modules.html")) return;
        mainBreadcrumb.href = mainBreadcrumb.href.replace(`/modules.html`, `/index.html`);
    }
    const currentLanguage = document.getElementById('selected-language').dataset.language;

    const languageFilter = document.getElementById('tsd-language-filter');
    languageFilter.addEventListener("mouseenter", (event) => {
        languageFilter.classList.add("active");
        const languageList = document.getElementById('tsd-language-select-list');
        const items = languageList.getElementsByTagName('li');
        for (const item of items) {
            if (item.dataset.value === currentLanguage) {
                item.classList.add('selected');
                break;
            }
        }
    });
    languageFilter.addEventListener("mouseleave", (event) => {
        languageFilter.classList.remove("active");
    });

    function addEventListenerToLanguages() {
        const languageList = document.getElementById('tsd-language-select-list');
        const items = languageList.getElementsByTagName('li');
        for (const item of items) {
            item.addEventListener("click", (event) => {
                languageSelected(event, item);
            });
        }
    }

    function languageSelected(event, itemClicked) {
        const selectedLanguage = itemClicked.dataset.value; //'en', 'fr', 'es', '..'
        if (currentLanguage === selectedLanguage) return;
        document.location = document.location.href.replace(`/${currentLanguage}/`, `/${selectedLanguage}/`);
    }

    function initializePage() {
        addEventListenerToLanguages();
        replaceMainBreadcrumbLink();
    }
    window.addEventListener('load', (event) => {
        initializePage();
    });
</script>